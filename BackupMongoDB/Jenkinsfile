pipeline {
    agent any

    parameters {
        string(name: 'KEY_BACKUP_ENV', defaultValue: 'hey.zip', description: '')
        choice(name: 'MONGO_DB', choices: ['hey-dev', 'hey-qa'], description: 'Selecciona la base de datos', )
        string(name: 'MONGO_HOST', defaultValue: 'develop.uf9uoog.mongodb.net', description: '')
    }

    environment {
        FOLDER_BACKUP = new Date().format("yyyyMMddHHmmss")
    }

    stages {
        stage('Prepare env') {
            steps {
                script {
                    try {
                        sh 'apt-get install gnupg curl zip -y'
                        sh 'curl -fsSL https://pgp.mongodb.com/server-7.0.asc | gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg --dearmor'
                        sh 'echo "deb [ signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] http://repo.mongodb.org/apt/debian bookworm/mongodb-org/7.0 main" | tee /etc/apt/sources.list.d/mongodb-org-7.0.list'
                        sh 'apt-get update -y && apt-get install -y mongodb-org-tools'
                        sh 'mongodump --version'
                    } catch (Exception e) {
                        echo "Skip mongo-tools installation"
                    }
                }
            }
        }

        stage('Take backup') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'mongodbuser', passwordVariable: 'MONGO_PASSWORD', usernameVariable: 'MONGO_USER')]) {
                    script {
                        sh 'mongodump --uri="mongodb+srv://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_HOST}/${MONGO_DB}?retryWrites=true&w=majority" -o=/tmp/${FOLDER_BACKUP} --gzip'
                        sh 'zip -rj /tmp/${FOLDER_BACKUP}_${KEY_BACKUP_ENV} /tmp/${FOLDER_BACKUP}/${MONGO_DB}'
                    }
                }
            }
        }

        stage('Download backup') {
            steps {
                script {
                    withAWS(credentials: 'awscredentials', region: 'us-east-2') {
                        s3Upload(file: "/tmp/${FOLDER_BACKUP}_${KEY_BACKUP_ENV}", bucket: 'sellia-backups', path: "${MONGO_DB}/${FOLDER_BACKUP}_${KEY_BACKUP_ENV}")
                    }
                }
            }
        }
    }

    post {
        always {
            sh 'rm -r /tmp/${FOLDER_BACKUP}_${KEY_BACKUP_ENV} /tmp/${FOLDER_BACKUP} | true'
        }
    }
}
