pipeline {
    agent any

    parameters {
        string(name: 'KEY_BACKUP_ENV', defaultValue: 'hey.zip', description: '')
        choice(name: 'MONGO_DB', choices: ['hey-dev', 'hey-qa'], description: 'Selecciona la base de datos', )
        string(name: 'MONGO_HOST', defaultValue: 'develop.uf9uoog.mongodb.net', description: '')
    }

    stages {
        stage('Prepare env') {
            steps {
                script {
                    sh 'sudo apt-get update -y'
                    sh 'sudo apt-get install -y mongodb-org-tools'
                    sh 'mongorestore --version'
                }
            }
        }

        stage('Download backup') {
            steps {
                script {
                    withAWS(credentials: 'awscredentials', region: 'us-east-2') {
                        s3Download(file: "/tmp/${KEY_BACKUP_ENV}", bucket: 'sellia-backups', path: "${KEY_BACKUP_ENV}", force: true)
                    }
                }
            }
        }

        stage('restore') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'mongodbuser', passwordVariable: 'MONGO_PASSWORD', usernameVariable: 'MONGO_USER')]) {
                    script {
                        sh 'mongorestore --uri="mongodb-srv://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_HOST}/${MONGO_DB}?retryWrites=true&w=majority" --db=${MONGO_DB} /tmp/${KEY_BACKUP_ENV} --gzip --drop'
                    }
                }
            }
        }

        stage('Delete backup') {
            steps {
                script {
                    sh 'rm -r /tmp/${KEY_BACKUP_ENV}'
                }
            }
        }
    }
}
